[% USE Koha %]
[% USE raw %]
[% PROCESS 'i18n.inc' %]
[% SET footerjs = 1 %]
[% INCLUDE 'doc-head-open.inc' %]
<title>Crontab: Configure &rsaquo; Plugins &rsaquo; Administration &rsaquo; Koha</title>
[% INCLUDE 'doc-head-close.inc' %]
</head>

<body id="crontab_plugin_configure" class="plugin">
    [% WRAPPER 'header.inc' %]
        [% INCLUDE 'prefs-admin-search.inc' %]
    [% END %]

    [% WRAPPER 'sub-header.inc' %]
        [% WRAPPER breadcrumbs %]
            [% WRAPPER breadcrumb_item %]
                <a href="/cgi-bin/koha/admin/admin-home.pl">Administration</a>
            [% END %]
            [% WRAPPER breadcrumb_item %]
                <a href="/cgi-bin/koha/plugins/plugins-home.pl">Plugins</a>
            [% END %]
            [% WRAPPER breadcrumb_item bc_active= 1 %]
                <span>Crontab: Configure</span>
            [% END %]
        [% END #/ WRAPPER breadcrumbs %]
    [% END #/ WRAPPER sub-header.inc %]

    <div class="main container-fluid">
        <div class="row">
            <div class="col-md-10 order-md-2 order-sm-1">
                <main>
                    <h1>Crontab: Configuration</h1>
                    <!-- Notice our form here has no 'action', this is good, it means that our forms will always get passed back to 'plugins/run.pl'. You could hard code it instead if you prefer -->
                    <form method="get">
                        <!-- Always pass these two parameters so the plugin system knows what to execute! -->
                        <input type="hidden" name="class" value="[% CLASS %]"/>
                        <input type="hidden" name="method" value="[% METHOD %]"/>

                        <fieldset class="rows">
                            <legend>Global Settings</legend>

                            <ol>
                                <li>
                                    <label for="enable_logging">Enable logging: </label>
                                    <select name="enable_logging">
                                        [% IF enable_logging == 'No' %]
                                            <option value="No" selected="selected">No</option>
                                        [% ELSE %]
                                            <option value="No">No</option>
                                        [% END %]

                                        [% IF enable_logging == 'Yes' %]
                                            <option value="Yes" selected="selected">Yes</option>
                                        [% ELSE %]
                                            <option value="Yes">Yes</option>
                                        [% END %]
                                    </select>
                                </li>
                            </ol>
                        </fieldset>

                        <fieldset class="rows">
                            <legend>Security Settings</legend>

                            <ol>
                                <li>
                                    <label for="patron_allowlist">User allowlist: </label>
                                    <select name="patron_allowlist" id="patron_allowlist" multiple="multiple"></select>
                                    <input type="hidden" name="user_allowlist" id="user_allowlist" value="[% user_allowlist | html %]" />
                                    <div class="hint">
                                        Search and select patrons allowed to use this plugin. Leave empty to allow all staff users.
                                        <br/><strong>Note:</strong> Superlibrarians always have access regardless of this setting.
                                    </div>
                                </li>
                            </ol>
                        </fieldset>

                        <fieldset class="action">
                            <input type="hidden" name="save" value="1" />
                            <input class="btn btn-primary" type="submit" value="Save" />
                            <a class="cancel" href="/cgi-bin/koha/plugins/run.pl?class=Koha%3A%3APlugin%3A%3ACom%3A%3APTFSEurope%3A%3ACrontab&method=configure">Cancel</a>
                        </fieldset>
                    </form>
                </main>
            </div> <!-- /.col-md-10.order-md-2 -->
            <div class="col-md-2 order-sm-2 order-md-1">
                <aside>
                    [% INCLUDE 'admin-menu.inc' %]
                </aside>
            </div> <!-- /.col-md-2.order-md-1 -->
        </div>
    </div>

    [% MACRO jsinclude BLOCK %]
        [% INCLUDE 'select2.inc' %]
        <script>
            $(document).ready(function() {
                $('#navmenulist a[href$="/cgi-bin/koha/plugins/plugins-home.pl"]').addClass("current");

                // Initialize patron allowlist select2
                $("#patron_allowlist").kohaSelect({
                    width: "50%",
                    multiple: true,
                    allowClear: true,
                    minimumInputLength: 3,
                    ajax: {
                        url: "/api/v1/patrons",
                        delay: 250,
                        dataType: "json",
                        headers: {
                            "x-koha-embed": "library"
                        },
                        data: function(params) {
                            let q = buildPatronSearchQuery(params.term);
                            let query = {
                                q: JSON.stringify(q),
                                _page: params.page,
                                _order_by: "+me.surname,+me.firstname"
                            };
                            return query;
                        },
                        processResults: function(data, params) {
                            let results = [];
                            data.results.forEach(function(patron) {
                                patron.id = patron.patron_id;
                                results.push(patron);
                            });
                            return {
                                results: results,
                                pagination: { more: data.pagination.more }
                            };
                        }
                    },
                    templateResult: function(patron) {
                        if (!patron.patron_id) {
                            return patron.text;
                        }

                        let $patron = $("<div></div>")
                            .append(
                                "" +
                                (patron.surname ? escape_str(patron.surname) + ", " : "") +
                                (patron.firstname ? escape_str(patron.firstname) + " " : "") +
                                (patron.cardnumber ? " (" + escape_str(patron.cardnumber) + ")" : "") +
                                "<small>" +
                                (patron.library ? ' <span class="ac-library">' + escape_str(patron.library.name) + "</span>" : "") +
                                "</small>"
                            );
                        return $patron;
                    },
                    templateSelection: function(patron) {
                        if (!patron.surname) {
                            return patron.text;
                        }
                        return escape_str(patron.surname) + ", " + escape_str(patron.firstname);
                    },
                    placeholder: __("Search for patrons to allow access")
                });

                // Load existing patrons if any
                let existingIds = $("#user_allowlist").val();
                if (existingIds) {
                    let patronIds = existingIds.split(/\s*,\s*/);
                    patronIds.forEach(function(patronId) {
                        if (patronId) {
                            $.ajax({
                                url: "/api/v1/patrons/" + patronId,
                                dataType: "json"
                            }).done(function(patron) {
                                let option = new Option(
                                    patron.surname + ", " + patron.firstname,
                                    patron.patron_id,
                                    true,
                                    true
                                );
                                $("#patron_allowlist").append(option).trigger('change');
                            });
                        }
                    });
                }

                // Update hidden field on form submit
                $("form").on("submit", function() {
                    let selectedIds = $("#patron_allowlist").val();
                    if (selectedIds && selectedIds.length > 0) {
                        $("#user_allowlist").val(selectedIds.join(","));
                    } else {
                        $("#user_allowlist").val("");
                    }
                });
            });
        </script>
    [% END %]

[% INCLUDE 'intranet-bottom.inc' %]
